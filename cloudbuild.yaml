{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Define a section for available secrets from Secret Manager\
availableSecrets:\
  secretManager:\
  - versionName: projects/YOUR_PROJECT_ID_HERE/secrets/YOUR_GEMINI_API_KEY_SECRET_NAME_HERE/versions/latest\
    env: 'GEMINI_API_KEY_CONTENT' # Makes the secret content available as GEMINI_API_KEY_CONTENT env var to steps\
\
steps:\
# Step 1: Build the Docker image\
# The GEMINI_API_KEY_CONTENT environment variable (from availableSecrets) is automatically available to this step.\
# We pass its value as a build argument (API_KEY_FOR_BUILD) to the Docker build process.\
- name: 'gcr.io/cloud-builders/docker'\
  args: [\
    'build',\
    '--tag=gcr.io/$\{PROJECT_ID\}/$\{_SERVICE_NAME\}:$\{SHORT_SHA\}', # PROJECT_ID & SHORT_SHA are auto-provided by Cloud Build\
    '--build-arg', 'API_KEY_FOR_BUILD=$\{GEMINI_API_KEY_CONTENT\}', # Pass secret content to Dockerfile\
    '.'  # Build context is the current directory\
  ]\
  id: 'Build Docker Image'\
\
# Step 2: Push the Docker image to Google Container Registry (GCR) or Artifact Registry\
- name: 'gcr.io/cloud-builders/docker'\
  args: ['push', 'gcr.io/$\{PROJECT_ID\}/$\{_SERVICE_NAME\}:$\{SHORT_SHA\}']\
  id: 'Push Docker Image'\
\
# Step 3: Deploy to Cloud Run\
- name: 'gcr.io/cloud-builders/gcloud'\
  args: [\
    'run', 'deploy', '$\{_SERVICE_NAME\}',\
    '--image=gcr.io/$\{PROJECT_ID\}/$\{_SERVICE_NAME\}:$\{SHORT_SHA\}',\
    '--region=$\{_REGION\}',\
    '--platform=managed',\
    '--allow-unauthenticated', # Allows public access. Configure authentication if needed.\
    '--port=8080',             # The port Nginx is listening on inside the container\
    '--set-env-vars=^#^NODE_ENV=production' # Example of setting other runtime env vars if needed\
  ]\
  id: 'Deploy to Cloud Run'\
\
# Define images to be built (for GCR)\
images:\
- 'gcr.io/$\{PROJECT_ID\}/$\{_SERVICE_NAME\}:$\{SHORT_SHA\}'\
\
# Define substitutions (variables) that can be overridden at build trigger time if needed\
substitutions:\
  _SERVICE_NAME: 'your-cloud-run-service-name-here' # Reemplaza esto, ej: diet-tracker-ai\
  _REGION: 'your-cloud-run-region-here'           # Reemplaza esto, ej: us-central1\
\
options:\
  logging: CLOUD_LOGGING_ONLY}